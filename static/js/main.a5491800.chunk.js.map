{"version":3,"sources":["components/providers/SessionProvider/SessionProvider.js","components/providers/ParallaxProvider/ParallaxProvider.js","components/providers/ThemeProvider/ThemeProvider.js","components/views/Body/Body.js","components/common/DivCentered.js","components/common/H1Centered.js","components/common/Description.js","components/common/Image.js","components/views/Intro/Intro.js","components/views/HeaderSeparator/HeaderSeparator.js","components/views/AboutMeDescription/AboutMeDescription.js","components/views/Banner/Banner.js","components/views/SkillsEducation/components/shared/common.js","components/views/SkillsEducation/components/Skills/Skills.js","components/views/SkillsEducation/components/Education/Education.js","components/views/SkillsEducation/SkillsEducation.js","components/views/Experience/components/Icon/Icon.js","components/views/Experience/Experience.js","components/views/ContactMe/ContactMe.js","components/views/Main/Main.js","components/views/Router/Router.js","components/index.js","serviceWorker.js","index.js"],"names":["SessionContext","React","createContext","SessionProvider","children","props","Provider","value","ParallaxProvider","Theme","theme","StyledBody","styled","div","colors","beige","fontFamily","robotoMono","Body","defaultProps","backgroundColor","DivCentered","height","darkMode","darkPlum","H1Centered","h1","fontSize","StyledDiv","width","disablePadding","DescriptionBody","description","map","desc","index","key","Description","pretext","StyledP","p","StyledImg","img","Image","text","path","src","StyledSpan","span","plum","Intro","language","useContext","hello","name","scroll","StyledH1","HeaderSeparator","headerText","AboutMeDescription","basename","kenting","StyledVerticalDiv","StyledBannerDiv","Banner","imageSrc","style","className","layers","image","amount","StyledH2","h2","bold","StyledHR","hr","SkillBody","skills","title","toUpperCase","skill","color","frameworks","join","Skills","Education","educationTitle","schools","school","yearAttended","major","concentration","length","EducationBody","StyledDivCentered","SkillsEducation","skillTitle","Icon","iconLink","VerticalTimelineElements","experienceList","ThemeContext","experience","contentStyle","background","contentArrowStyle","borderRight","date","iconStyle","display","alignItems","justifyContent","icon","company","location","summary","Experience","useStyles","makeStyles","button","margin","spacing","input","CenterContents","ContactMe","classes","contactMe","inquiries","href","Button","variant","onClick","window","open","githubUrl","viewOnGithub","Main","aboutMe","skillsEducation","contact","Router","exact","component","App","Boolean","hostname","match","ReactDOM","render","StrictMode","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a5491800.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SessionContext = React.createContext({});\r\n\r\nconst SessionProvider = ({ children, ...props }) => {\r\n  return (\r\n    <SessionContext.Provider value={{ ...props }}>\r\n      {children}\r\n    </SessionContext.Provider>\r\n  );\r\n};\r\n\r\nSessionProvider.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport { SessionContext, SessionProvider };\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ParallaxProvider as ParallaxProv } from \"react-scroll-parallax\";\r\n\r\nconst ParallaxProvider = ({ children }) => {\r\n  return <ParallaxProv>{children}</ParallaxProv>;\r\n};\r\n\r\nParallaxProvider.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport { ParallaxProvider };\r\n","import React from \"react\";\r\nimport { ThemeProvider, ThemeContext } from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Theme = ({ children, theme }) => {\r\n  return <ThemeProvider theme={theme}>{children}</ThemeProvider>;\r\n};\r\n\r\nTheme.propTypes = {\r\n  theme: PropTypes.object.isRequired,\r\n};\r\n\r\nexport { Theme as ThemeProvider, ThemeContext };\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst StyledBody = styled.div`\r\n  background-color: ${({ theme: { colors } }) => colors.beige};\r\n  font-family: ${({ theme: { fontFamily } }) => fontFamily.robotoMono};\r\n`;\r\n\r\nconst Body = ({ children }) => <StyledBody>{children}</StyledBody>;\r\n\r\nBody.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nBody.defaultProps = {\r\n  backgroundColor: \"white\",\r\n};\r\n\r\nexport { Body };\r\n","import styled from \"styled-components\";\r\n\r\nconst DivCentered = styled.div`\r\n  height: ${({ height }) => `${height}vh`};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: ${({ darkMode, theme: { colors } }) =>\r\n    darkMode ? colors.darkPlum : \"inherit\"};\r\n`;\r\n\r\nexport { DivCentered };\r\n","import styled from \"styled-components\";\r\n\r\nconst H1Centered = styled.h1`\r\n  position: absolute;\r\n  font-size: ${(props) => `${props.fontSize}vw`};\r\n  text-align: center;\r\n  margin-block-start: 0;\r\n`;\r\n\r\nexport { H1Centered };\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledDiv = styled.div`\r\n  width: ${({ width }) => width};\r\n  padding: ${({ disablePadding }) =>\r\n    disablePadding ? \"0\" : \"2em 2em 2em 8em\"};\r\n\r\n  @media (max-width: 414px) {\r\n    width: 100%;\r\n    padding: ${({ disablePadding }) => (disablePadding ? \"0\" : \"2em\")};\r\n  }\r\n`;\r\n\r\nconst DescriptionBody = ({ description }) => {\r\n  return description.map((desc, index) => {\r\n    return <p key={index}>{desc}</p>;\r\n  });\r\n};\r\n\r\nconst Description = ({ description = [], pretext, width, disablePadding }) => {\r\n  return (\r\n    <StyledDiv width={width} disablePadding={disablePadding}>\r\n      {pretext && <>{pretext}</>}\r\n      <DescriptionBody description={description} />\r\n    </StyledDiv>\r\n  );\r\n};\r\n\r\nDescription.propTypes = {\r\n  description: PropTypes.arrayOf(PropTypes.string),\r\n  pretext: PropTypes.node,\r\n  width: PropTypes.string,\r\n};\r\n\r\nDescription.defaultProps = {\r\n  width: \"100%\",\r\n  disablePadding: false,\r\n};\r\n\r\nexport { Description };\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledDiv = styled.div`\r\n  width: 40%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  @media (max-width: 414px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst StyledP = styled.p`\r\n  font-style: italic;\r\n`;\r\n\r\nconst StyledImg = styled.img`\r\n  max-height: 70%;\r\n  max-width: 70%;\r\n`;\r\n\r\nconst Image = ({ text, path }) => (\r\n  <StyledDiv>\r\n    <StyledImg src={path} />\r\n    <StyledP>{text}</StyledP>\r\n  </StyledDiv>\r\n);\r\n\r\nImage.propTypes = {\r\n  text: PropTypes.string,\r\n  path: PropTypes.string.isRequired,\r\n};\r\n\r\nexport { Image };\r\n","import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { SessionContext } from \"../../providers\";\r\nimport { DivCentered, H1Centered } from \"../../common\";\r\n\r\nconst StyledSpan = styled.span`\r\n  color: ${({ theme: { colors } }) => colors.plum};\r\n`;\r\n\r\nconst StyledP = styled.p`\r\n  position: absolute;\r\n  bottom: 5em;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  color: #3d3547;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst Intro = () => {\r\n  const { language } = useContext(SessionContext);\r\n  return (\r\n    <DivCentered height={100}>\r\n      <H1Centered fontSize={9}>\r\n        {language.hello} <StyledSpan>{language.name}</StyledSpan>\r\n      </H1Centered>\r\n      <StyledP>{language.scroll}</StyledP>\r\n    </DivCentered>\r\n  );\r\n};\r\n\r\nexport { Intro };\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { DivCentered, H1Centered } from \"../../common\";\r\n\r\nconst StyledH1 = styled(H1Centered)`\r\n  border-top: ${({ theme: { colors } }) => `0.1em solid ${colors.plum}`};\r\n  border-bottom: ${({ theme: { colors } }) => `0.1em solid ${colors.plum}`};\r\n  padding: 0.25em;\r\n  font-style: italic;\r\n  color: ${({ darkMode, theme: { colors } }) =>\r\n    darkMode ? colors.beige : \"inherit\"};\r\n`;\r\n\r\nconst HeaderSeparator = ({ headerText, darkMode }) => {\r\n  return (\r\n    <DivCentered height={50} darkMode={darkMode}>\r\n      <StyledH1 fontSize={7} darkMode={darkMode}>\r\n        {headerText}\r\n      </StyledH1>\r\n    </DivCentered>\r\n  );\r\n};\r\n\r\nHeaderSeparator.propTypes = {\r\n  headerText: PropTypes.string.isRequired,\r\n};\r\n\r\nHeaderSeparator.defaultProps = {\r\n  darkMode: false,\r\n};\r\n\r\nexport { HeaderSeparator };\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { DivCentered, Description, Image } from \"../../common\";\r\nimport { SessionContext } from \"../../providers\";\r\n\r\nconst AboutMeDescription = () => {\r\n  const { language, basename } = useContext(SessionContext);\r\n  return (\r\n    <DivCentered height={100}>\r\n      <Description description={language.description} width={\"60%\"} />\r\n      <Image text={language.kenting} path={`${basename}/images/kenting.jpg`} />\r\n    </DivCentered>\r\n  );\r\n};\r\n\r\nexport { AboutMeDescription };\r\n","import React from \"react\";\r\nimport { ParallaxBanner } from \"react-scroll-parallax\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./Banner.css\";\r\n\r\nconst StyledVerticalDiv = styled.div`\r\n  width: 100%;\r\n  overflow-x: hidden;\r\n\r\n  &:before {\r\n    position: fixed;\r\n    display: inline-block;\r\n    padding: 4px;\r\n    top: 10px;\r\n    left: 50%;\r\n    text-align: center;\r\n    letter-spacing: 0.05em;\r\n    text-transform: uppercase;\r\n    background-color: rgba(255, 255, 255, 0.1);\r\n    border-radius: 3px;\r\n    color: white;\r\n    z-index: 1000;\r\n    transform: translate3d(-50%, 0, 0);\r\n  }\r\n`;\r\n\r\nconst StyledBannerDiv = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst Banner = ({ imageSrc, height }) => {\r\n  return (\r\n    <StyledVerticalDiv>\r\n      <StyledBannerDiv>\r\n        <ParallaxBanner\r\n          style={{\r\n            height: `${height}vh`,\r\n          }}\r\n          className={\"bannerBg\"}\r\n          layers={[{ image: imageSrc, amount: 0.2 }]}\r\n        />\r\n      </StyledBannerDiv>\r\n    </StyledVerticalDiv>\r\n  );\r\n};\r\n\r\nBanner.propTypes = {\r\n  imageSrc: PropTypes.string.isRequired,\r\n  height: PropTypes.number.isRequired,\r\n};\r\n\r\nBanner.defaultProps = {\r\n  height: 100,\r\n};\r\n\r\nexport { Banner };\r\n","import styled from \"styled-components\";\r\n\r\nconst StyledDiv = styled.div`\r\n  width: 50%;\r\n  padding: 2em 2em 2em 2em;\r\n\r\n  @media (max-width: 414px) {\r\n    width: 75%;\r\n    padding: 1em;\r\n  }\r\n`;\r\n\r\nconst StyledH2 = styled.h2`\r\n  color: ${({ theme: { colors } }) => colors.plum};\r\n  font-style: italic;\r\n  letter-spacing: 0.3em;\r\n  font-weight: bold;\r\n\r\n  @media (max-width: 414px) {\r\n    font-size: 0.75em;\r\n  }\r\n`;\r\n\r\nconst StyledP = styled.p`\r\n  color: ${({ theme: { colors } }) => colors.beige};\r\n  font-weight: ${({ bold }) => (bold ? \"bold\" : \"initial\")};\r\n\r\n  @media (max-width: 414px) {\r\n    font-size: 0.75em;\r\n  }\r\n`;\r\n\r\nconst StyledHR = styled.hr`\r\n  width: 50%;\r\n  margin-left: 0px;\r\n  border: 1px solid #a179af;\r\n  background-color: ${({ theme: { colors } }) => colors.plum};\r\n`;\r\n\r\nexport { StyledDiv, StyledH2, StyledP, StyledHR };\r\n","import React from \"react\";\r\n\r\nimport { StyledDiv, StyledH2, StyledP } from \"../shared\";\r\n\r\nconst SkillBody = ({ skills, title }) => (\r\n  <>\r\n    <StyledH2>{title.toUpperCase()}</StyledH2>\r\n    {skills.map((skill, index) => (\r\n      <div key={index}>\r\n        <StyledP style={{ color: \"white\" }} bold>\r\n          {`${skill.title}:`}\r\n        </StyledP>\r\n        <StyledP>{skill.frameworks.join(\", \")}</StyledP>\r\n      </div>\r\n    ))}\r\n  </>\r\n);\r\n\r\nconst Skills = ({ skills, title }) => {\r\n  return (\r\n    <StyledDiv>\r\n      <SkillBody skills={skills} title={title} />\r\n    </StyledDiv>\r\n  );\r\n};\r\n\r\nexport { Skills };\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { SessionContext } from \"../../../../providers\";\r\nimport { StyledDiv, StyledH2, StyledP, StyledHR } from \"../shared\";\r\n\r\nconst EducationBody = (language) => (\r\n  <>\r\n    <StyledH2>{language.educationTitle.toUpperCase()}</StyledH2>\r\n    {language.schools.map((school, index) => (\r\n      <div key={index}>\r\n        <StyledP bold>{school.name}</StyledP>\r\n        <StyledP>{school.yearAttended}</StyledP>\r\n        <StyledP>\r\n          {language.major} {school.major}\r\n        </StyledP>\r\n        <StyledP>\r\n          {language.concentration} {school.concentration}\r\n        </StyledP>\r\n        {index !== language.schools.length - 1 && <StyledHR />}\r\n      </div>\r\n    ))}\r\n  </>\r\n);\r\n\r\nconst Education = () => {\r\n  const { language } = useContext(SessionContext);\r\n  return <StyledDiv>{EducationBody(language)}</StyledDiv>;\r\n};\r\n\r\nexport { Education };\r\n","import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { DivCentered } from \"../../common\";\r\nimport { Skills, Education } from \"./components\";\r\nimport { SessionContext } from \"../../providers\";\r\n\r\nconst StyledDivCentered = styled(DivCentered)`\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n  align-content: space-evenly;\r\n  padding: 2em 12em 2em 12em;\r\n\r\n  @media (max-width: 414px) {\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 0em;\r\n  }\r\n`;\r\n\r\nconst SkillsEducation = () => {\r\n  const { language } = useContext(SessionContext);\r\n  return (\r\n    <StyledDivCentered height={110} darkMode>\r\n      <Skills title={language.skillTitle} skills={language.skills} />\r\n      <Education />\r\n    </StyledDivCentered>\r\n  );\r\n};\r\n\r\nexport { SkillsEducation };\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledImg = styled.img`\r\n  border-radius: 60px;\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nconst Icon = ({ iconLink }) => <StyledImg src={iconLink} />;\r\n\r\nexport { Icon };\r\n","import React, { useContext } from \"react\";\r\nimport {\r\n  VerticalTimeline,\r\n  VerticalTimelineElement,\r\n} from \"react-vertical-timeline-component\";\r\nimport \"react-vertical-timeline-component/style.min.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { DivCentered } from \"../../common\";\r\nimport { ThemeContext } from \"../../providers\";\r\nimport { Icon } from \"./components\";\r\n\r\nconst VerticalTimelineElements = ({ experienceList }) => {\r\n  const { colors } = useContext(ThemeContext);\r\n  return (\r\n    <>\r\n      {experienceList.map((experience, index) => (\r\n        <VerticalTimelineElement\r\n          key={index}\r\n          className=\"vertical-timeline-element--work\"\r\n          contentStyle={{\r\n            background: colors.plum,\r\n            color: colors.beige,\r\n          }}\r\n          contentArrowStyle={{ borderRight: `7px solid  ${colors.plum}` }}\r\n          date={experience.date}\r\n          iconStyle={{\r\n            background: \"rgb(33, 150, 243)\",\r\n            color: colors.beige,\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n          icon={<Icon iconLink={experience.icon} />}\r\n        >\r\n          <h3 className=\"vertical-timeline-element-title\">\r\n            {experience.title}\r\n          </h3>\r\n          <h4 className=\"vertical-timeline-element-subtitle\">\r\n            {experience.company}\r\n          </h4>\r\n          <h4 className=\"vertical-timeline-element-subtitle\">\r\n            {experience.location}\r\n          </h4>\r\n          <p>{experience.summary}</p>\r\n        </VerticalTimelineElement>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nconst Experience = ({ experienceList }) => {\r\n  return (\r\n    <DivCentered height={130} darkMode>\r\n      <VerticalTimeline>\r\n        <VerticalTimelineElements experienceList={experienceList} />\r\n      </VerticalTimeline>\r\n    </DivCentered>\r\n  );\r\n};\r\n\r\nExperience.propTypes = {\r\n  experienceList: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      company: PropTypes.string.isRequired,\r\n      location: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      date: PropTypes.string.isRequired,\r\n      summary: PropTypes.string.isRequired,\r\n      icon: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport { Experience };\r\n","import React, { useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { SessionContext } from \"../../providers\";\r\nimport { DivCentered, Description } from \"../../common\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    fontFamily: \"inherit\",\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\nconst CenterContents = styled(DivCentered)`\r\n  text-align: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst ContactMe = () => {\r\n  const { language } = useContext(SessionContext);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <CenterContents height={50}>\r\n      <Description\r\n        description={language.contactMe}\r\n        width={\"60%\"}\r\n        disablePadding\r\n        pretext={\r\n          <>\r\n            <p>\r\n              {language.inquiries}\r\n              <a href=\"&#109;&#97;&#105;&#108;&#116;&#111;&#58;&#109;&#97;&#114;&#99;&#111;&#46;&#97;&#117;&#117;&#64;&#108;&#105;&#118;&#101;&#46;&#99;&#111;&#109;\">\r\n                &#104;&#101;&#114;&#101;\r\n              </a>\r\n              .\r\n            </p>\r\n          </>\r\n        }\r\n      />\r\n      <Button\r\n        variant=\"outlined\"\r\n        className={classes.button}\r\n        onClick={() => window.open(language.githubUrl, \"_blank\")}\r\n      >\r\n        {language.viewOnGithub}\r\n      </Button>\r\n    </CenterContents>\r\n  );\r\n};\r\n\r\nexport { ContactMe };\r\n","import React, { useContext } from \"react\";\r\n\r\nimport {\r\n  ParallaxProvider,\r\n  SessionContext,\r\n  ThemeProvider,\r\n} from \"../../providers\";\r\nimport { Body } from \"../Body\";\r\nimport { Intro } from \"../Intro\";\r\nimport { HeaderSeparator } from \"../HeaderSeparator\";\r\nimport { AboutMeDescription } from \"../AboutMeDescription\";\r\nimport { Banner } from \"../Banner\";\r\nimport { SkillsEducation } from \"../SkillsEducation\";\r\nimport { Experience } from \"../Experience\";\r\nimport { ContactMe } from \"../ContactMe\";\r\n\r\nconst Main = () => {\r\n  const { language, theme } = useContext(SessionContext);\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <ParallaxProvider>\r\n        <Body>\r\n          <Intro />\r\n          <HeaderSeparator headerText={language.aboutMe} />\r\n          <AboutMeDescription />\r\n          <Banner\r\n            imageSrc={\r\n              \"https://mir-s3-cdn-cf.behance.net/project_modules/max_1200/74b15967880779.5b49323a6f93d.jpg\"\r\n            }\r\n            height={50}\r\n          />\r\n          <HeaderSeparator headerText={language.skillsEducation} darkMode />\r\n          <SkillsEducation />\r\n          <HeaderSeparator headerText={language.experience} darkMode />\r\n          <Experience experienceList={language.experienceList} />\r\n          <HeaderSeparator headerText={language.contact} />\r\n          <ContactMe />\r\n        </Body>\r\n      </ParallaxProvider>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport { Main };\r\n","import React, { useContext } from \"react\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\n\r\nimport { Main } from \"../Main\";\r\nimport { SessionContext } from \"../../providers\";\r\n\r\nconst Router = () => {\r\n  const { basename } = useContext(SessionContext);\r\n  return (\r\n    <BrowserRouter basename={basename}>\r\n      <Route exact path={\"/\"} component={Main} />\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport { Router };\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { SessionProvider } from \"./providers\";\nimport { Router } from \"./views\";\nimport language from \"../resources/language/en.json\";\nimport theme from \"../resources/theme/theme.json\";\n\nconst App = ({ basename }) => (\n  <SessionProvider basename={basename} language={language} theme={theme}>\n    <Router />\n  </SessionProvider>\n);\n\nApp.propTypes = {\n  basename: PropTypes.string.isRequired,\n};\n\nexport { App };\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./resources/styles/index.css\";\nimport { App } from \"./components\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App basename={process.env.PUBLIC_URL} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}