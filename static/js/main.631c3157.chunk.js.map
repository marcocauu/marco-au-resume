{"version":3,"sources":["components/providers/SessionProvider/SessionProvider.js","components/providers/ParallaxProvider/ParallaxProvider.js","components/providers/ThemeProvider/ThemeProvider.js","components/views/Body/Body.js","components/common/DivCentered.js","components/common/H1Centered.js","components/common/Description.js","components/common/Image.js","components/views/HeaderSeparator/HeaderSeparator.js","components/common/Section.js","components/views/Intro/Intro.js","components/views/AboutMeDescription/AboutMeDescription.js","components/views/Banner/Banner.js","components/views/SkillsEducation/components/shared/common.js","components/views/SkillsEducation/components/Skills/Skills.js","components/views/SkillsEducation/components/Education/Education.js","components/views/SkillsEducation/SkillsEducation.js","components/views/Experience/components/Icon/Icon.js","components/views/Experience/Experience.js","helpers/windowOpen.js","helpers/scrollToTop.js","components/views/ContactMe/ContactMe.js","components/views/Main/Main.js","components/views/Router/Router.js","components/index.js","serviceWorker.js","index.js"],"names":["SessionContext","React","createContext","SessionProvider","children","props","Provider","value","ParallaxProvider","Theme","theme","StyledBody","styled","div","colors","beige","fontFamily","robotoMono","Body","DivCentered","height","darkMode","darkPlum","H1Centered","h1","fontSize","StyledDiv","DescriptionBody","description","map","desc","index","key","Description","pretext","StyledP","p","StyledImg","img","Image","text","path","src","StyledH1","plum","HeaderSeparator","headerText","defaultProps","Section","contentHeight","StyledSpan","span","Intro","language","useContext","hello","name","scroll","AboutMeDescription","basename","aboutMe","kenting","StyledVerticalDiv","StyledBannerDiv","Banner","imageSrc","style","className","layers","image","amount","StyledH2","h2","bold","StyledHR","hr","SkillBody","skills","title","toUpperCase","skill","color","frameworks","join","Skills","Education","major","concentration","education","school","yearAttended","length","EducationBody","StyledDivCentered","SkillsEducation","skillsEducation","skillTitle","educationTitle","programTitle","concentrationTitle","schools","Icon","iconLink","VerticalTimelineElements","experienceList","ThemeContext","experience","contentStyle","background","contentArrowStyle","borderRight","date","iconStyle","display","alignItems","justifyContent","icon","company","location","summary","Experience","windowOpen","link","isTargetBlank","window","open","scrollToTop","top","behavior","scrollTo","CenterContents","StyledDivRow","ContactMe","classes","makeStyles","button","margin","spacing","backgroundColor","input","contact","inquiries","href","contactMe","Button","id","variant","onClick","githubUrl","viewOnGithub","linkedinUrl","viewLinkedin","Main","images","vancouver","Router","exact","component","App","Boolean","hostname","match","ReactDOM","render","StrictMode","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.631c3157.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SessionContext = React.createContext({});\r\n\r\nconst SessionProvider = ({ children, ...props }) => (\r\n  <SessionContext.Provider value={{ ...props }}>\r\n    {children}\r\n  </SessionContext.Provider>\r\n);\r\n\r\nSessionProvider.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport { SessionContext, SessionProvider };\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ParallaxProvider as ParallaxProv } from \"react-scroll-parallax\";\r\n\r\nconst ParallaxProvider = ({ children }) => (\r\n  <ParallaxProv>{children}</ParallaxProv>\r\n);\r\n\r\nParallaxProvider.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport { ParallaxProvider };\r\n","import React from \"react\";\r\nimport { ThemeProvider, ThemeContext } from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Theme = ({ children, theme }) => (\r\n  <ThemeProvider theme={theme}>{children}</ThemeProvider>\r\n);\r\n\r\nTheme.propTypes = {\r\n  theme: PropTypes.object.isRequired,\r\n};\r\n\r\nexport { Theme as ThemeProvider, ThemeContext };\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst StyledBody = styled.div`\r\n  background-color: ${({ theme: { colors } }) => colors.beige};\r\n  font-family: ${({ theme: { fontFamily } }) => fontFamily.robotoMono};\r\n`;\r\n\r\nconst Body = ({ children }) => <StyledBody>{children}</StyledBody>;\r\n\r\nBody.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport { Body };\r\n","import styled from \"styled-components\";\r\n\r\nconst DivCentered = styled.div`\r\n  height: ${({ height }) => `${height}vh`};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: ${({\r\n    darkMode,\r\n    theme: {\r\n      colors: { darkPlum },\r\n    },\r\n  }) => (darkMode ? darkPlum : \"inherit\")};\r\n`;\r\n\r\nexport { DivCentered };\r\n","import styled from \"styled-components\";\r\n\r\nconst H1Centered = styled.h1`\r\n  position: absolute;\r\n  font-size: ${({ fontSize }) => `${fontSize}vw`};\r\n  text-align: center;\r\n  margin-block-start: 0;\r\n`;\r\n\r\nexport { H1Centered };\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledDiv = styled.div`\r\n  width: 60%;\r\n  margin: 2em 2em 2em 8em;\r\n\r\n  @media (max-width: 414px) {\r\n    width: 100%;\r\n    margin: 2em;\r\n  }\r\n`;\r\n\r\nconst DescriptionBody = ({ description }) =>\r\n  description.map((desc, index) => <p key={index}>{desc}</p>);\r\n\r\nconst Description = ({ description = [], pretext }) => (\r\n  <StyledDiv>\r\n    {pretext && <>{pretext}</>}\r\n    <DescriptionBody description={description} />\r\n  </StyledDiv>\r\n);\r\n\r\nDescription.propTypes = {\r\n  description: PropTypes.arrayOf(PropTypes.string),\r\n};\r\n\r\nexport { Description };\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledDiv = styled.div`\r\n  width: 40%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  @media (max-width: 414px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst StyledP = styled.p`\r\n  font-style: italic;\r\n`;\r\n\r\nconst StyledImg = styled.img`\r\n  max-height: 70%;\r\n  max-width: 70%;\r\n`;\r\n\r\nconst Image = ({ text, path }) => (\r\n  <StyledDiv>\r\n    <StyledImg src={path} />\r\n    <StyledP>{text}</StyledP>\r\n  </StyledDiv>\r\n);\r\n\r\nImage.propTypes = {\r\n  text: PropTypes.string,\r\n  path: PropTypes.string.isRequired,\r\n};\r\n\r\nexport { Image };\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { DivCentered, H1Centered } from \"../../common\";\r\n\r\nconst StyledH1 = styled(H1Centered)`\r\n  border-top: ${({\r\n    theme: {\r\n      colors: { plum },\r\n    },\r\n  }) => `0.1em solid ${plum}`};\r\n  border-bottom: ${({\r\n    theme: {\r\n      colors: { plum },\r\n    },\r\n  }) => `0.1em solid ${plum}`};\r\n  padding: 0.25em;\r\n  font-style: italic;\r\n  color: ${({\r\n    darkMode,\r\n    theme: {\r\n      colors: { beige },\r\n    },\r\n  }) => (darkMode ? beige : \"inherit\")};\r\n`;\r\n\r\nconst HeaderSeparator = ({ headerText, darkMode }) => (\r\n  <DivCentered height={50} darkMode={darkMode}>\r\n    <StyledH1 fontSize={7} darkMode={darkMode}>\r\n      {headerText}\r\n    </StyledH1>\r\n  </DivCentered>\r\n);\r\n\r\nHeaderSeparator.propTypes = {\r\n  headerText: PropTypes.string.isRequired,\r\n  darkMode: PropTypes.bool,\r\n};\r\n\r\nHeaderSeparator.defaultProps = {\r\n  darkMode: false,\r\n};\r\n\r\nexport { HeaderSeparator };\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { HeaderSeparator } from \"../views/HeaderSeparator\";\r\nimport { DivCentered } from \"./DivCentered\";\r\n\r\nconst Section = ({ headerText, darkMode, contentHeight, children }) => (\r\n  <>\r\n    <HeaderSeparator headerText={headerText} darkMode={darkMode} />\r\n    <DivCentered height={contentHeight} darkMode={darkMode}>\r\n      {children}\r\n    </DivCentered>\r\n  </>\r\n);\r\n\r\nSection.propTypes = {\r\n  headerText: PropTypes.string.isRequired,\r\n  darkMode: PropTypes.bool,\r\n  contentHeight: PropTypes.number.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nSection.defaultProps = {\r\n  darkMode: false,\r\n  contentHeight: 100,\r\n};\r\n\r\nexport { Section };\r\n","import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { SessionContext } from \"../../providers\";\r\nimport { DivCentered, H1Centered } from \"../../common\";\r\n\r\nconst StyledSpan = styled.span`\r\n  color: ${({ theme: { colors } }) => colors.plum};\r\n`;\r\n\r\nconst StyledP = styled.p`\r\n  position: absolute;\r\n  bottom: 5em;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  color: #3d3547;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst Intro = () => {\r\n  const { language } = useContext(SessionContext);\r\n  return (\r\n    <DivCentered height={100}>\r\n      <H1Centered fontSize={9}>\r\n        {language.hello} <StyledSpan>{language.name}</StyledSpan>\r\n      </H1Centered>\r\n      <StyledP>{language.scroll}</StyledP>\r\n    </DivCentered>\r\n  );\r\n};\r\n\r\nexport { Intro };\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { Description, Image, Section } from \"../../common\";\r\nimport { SessionContext } from \"../../providers\";\r\n\r\nconst AboutMeDescription = () => {\r\n  const { language, basename } = useContext(SessionContext);\r\n  return (\r\n    <Section headerText={language.aboutMe} contentHeight={100}>\r\n      <Description description={language.description} />\r\n      <Image text={language.kenting} path={`${basename}/images/kenting.jpg`} />\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport { AboutMeDescription };\r\n","import React from \"react\";\r\nimport { ParallaxBanner } from \"react-scroll-parallax\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"../../../resources/styles/Banner.css\";\r\n\r\nconst StyledVerticalDiv = styled.div`\r\n  width: 100%;\r\n  overflow-x: hidden;\r\n\r\n  &:before {\r\n    position: fixed;\r\n    display: inline-block;\r\n    padding: 4px;\r\n    top: 10px;\r\n    left: 50%;\r\n    text-align: center;\r\n    letter-spacing: 0.05em;\r\n    text-transform: uppercase;\r\n    background-color: rgba(255, 255, 255, 0.1);\r\n    border-radius: 3px;\r\n    color: white;\r\n    z-index: 1000;\r\n    transform: translate3d(-50%, 0, 0);\r\n  }\r\n`;\r\n\r\nconst StyledBannerDiv = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst Banner = ({ imageSrc, height }) => (\r\n  <StyledVerticalDiv>\r\n    <StyledBannerDiv>\r\n      <ParallaxBanner\r\n        style={{\r\n          height: `${height}vh`,\r\n        }}\r\n        className={\"bannerBg\"}\r\n        layers={[{ image: imageSrc, amount: 0.2 }]}\r\n      />\r\n    </StyledBannerDiv>\r\n  </StyledVerticalDiv>\r\n);\r\n\r\nBanner.propTypes = {\r\n  imageSrc: PropTypes.string.isRequired,\r\n  height: PropTypes.number.isRequired,\r\n};\r\n\r\nBanner.defaultProps = {\r\n  height: 100,\r\n};\r\n\r\nexport { Banner };\r\n","import styled from \"styled-components\";\r\n\r\nconst StyledDiv = styled.div`\r\n  width: 50%;\r\n  padding: 2em 2em 2em 2em;\r\n\r\n  @media (max-width: 414px) {\r\n    width: 75%;\r\n    padding: 1em;\r\n  }\r\n`;\r\n\r\nconst StyledH2 = styled.h2`\r\n  color: ${({ theme: { colors } }) => colors.plum};\r\n  font-style: italic;\r\n  letter-spacing: 0.3em;\r\n  font-weight: bold;\r\n\r\n  @media (max-width: 414px) {\r\n    font-size: 0.75em;\r\n  }\r\n`;\r\n\r\nconst StyledP = styled.p`\r\n  color: ${({ theme: { colors } }) => colors.beige};\r\n  font-weight: ${({ bold }) => (bold ? \"bold\" : \"initial\")};\r\n\r\n  @media (max-width: 414px) {\r\n    font-size: 0.75em;\r\n  }\r\n`;\r\n\r\nconst StyledHR = styled.hr`\r\n  width: 50%;\r\n  margin-left: 0px;\r\n  border: 1px solid #a179af;\r\n  background-color: ${({ theme: { colors } }) => colors.plum};\r\n`;\r\n\r\nexport { StyledDiv, StyledH2, StyledP, StyledHR };\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { StyledDiv, StyledH2, StyledP } from \"../shared\";\r\n\r\nconst SkillBody = ({ skills, title }) => (\r\n  <>\r\n    <StyledH2>{title.toUpperCase()}</StyledH2>\r\n    {skills.map((skill, index) => (\r\n      <div key={index}>\r\n        <StyledP style={{ color: \"white\" }} bold>\r\n          {`${skill.title}:`}\r\n        </StyledP>\r\n        <StyledP>{skill.frameworks.join(\", \")}</StyledP>\r\n      </div>\r\n    ))}\r\n  </>\r\n);\r\n\r\nconst Skills = ({ skills, title }) => (\r\n  <StyledDiv>\r\n    <SkillBody skills={skills} title={title} />\r\n  </StyledDiv>\r\n);\r\n\r\nSkills.propTypes = {\r\n  skills: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      title: PropTypes.string.isRequired,\r\n      frameworks: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    })\r\n  ).isRequired,\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nSkills.defaultProps = {\r\n  skills: [],\r\n  title: \"\",\r\n};\r\n\r\nexport { Skills };\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { StyledDiv, StyledH2, StyledP, StyledHR } from \"../shared\";\r\n\r\nconst EducationBody = ({ title, major, concentration, education }) => (\r\n  <>\r\n    <StyledH2>{title.toUpperCase()}</StyledH2>\r\n    {education.map((school, index) => (\r\n      <div key={index}>\r\n        <StyledP bold>{school.name}</StyledP>\r\n        <StyledP>{school.yearAttended}</StyledP>\r\n        <StyledP>\r\n          {major} {school.major}\r\n        </StyledP>\r\n        <StyledP>\r\n          {concentration} {school.concentration}\r\n        </StyledP>\r\n        {index !== education.length - 1 && <StyledHR />}\r\n      </div>\r\n    ))}\r\n  </>\r\n);\r\n\r\nconst Education = ({ title, major, concentration, education }) => (\r\n  <StyledDiv>\r\n    {EducationBody({ title, major, concentration, education })}\r\n  </StyledDiv>\r\n);\r\n\r\nEducation.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  major: PropTypes.string.isRequired,\r\n  concentration: PropTypes.string.isRequired,\r\n  education: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      major: PropTypes.string.isRequired,\r\n      concentration: PropTypes.string.isRequired,\r\n      yearAttended: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nEducation.defaultProps = {\r\n  title: \"\",\r\n  major: \"\",\r\n  concentration: \"\",\r\n  education: [],\r\n};\r\n\r\nexport { Education };\r\n","import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { DivCentered, Section } from \"../../common\";\r\nimport { Skills, Education } from \"./components\";\r\nimport { SessionContext } from \"../../providers\";\r\n\r\nconst StyledDivCentered = styled(DivCentered)`\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n  align-content: space-evenly;\r\n  padding: 2em 12em 2em 12em;\r\n\r\n  @media (max-width: 414px) {\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 0em;\r\n  }\r\n`;\r\n\r\nconst SkillsEducation = () => {\r\n  const { language } = useContext(SessionContext);\r\n  return (\r\n    <Section headerText={language.skillsEducation} contentHeight={110} darkMode>\r\n      <StyledDivCentered height={110} darkMode>\r\n        <Skills title={language.skillTitle} skills={language.skills} />\r\n        <Education\r\n          title={language.educationTitle}\r\n          major={language.programTitle}\r\n          concentration={language.concentrationTitle}\r\n          education={language.schools}\r\n        />\r\n      </StyledDivCentered>\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport { SkillsEducation };\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledImg = styled.img`\r\n  border-radius: 60px;\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nconst Icon = ({ iconLink }) => <StyledImg src={iconLink} />;\r\n\r\nexport { Icon };\r\n","import React, { useContext } from \"react\";\r\nimport {\r\n  VerticalTimeline,\r\n  VerticalTimelineElement,\r\n} from \"react-vertical-timeline-component\";\r\nimport \"react-vertical-timeline-component/style.min.css\";\r\n\r\nimport { ThemeContext, SessionContext } from \"../../providers\";\r\nimport { Icon } from \"./components\";\r\nimport { Section } from \"../../common\";\r\n\r\nconst VerticalTimelineElements = ({ experienceList }) => {\r\n  const {\r\n    colors: { plum, beige },\r\n  } = useContext(ThemeContext);\r\n  return (\r\n    <>\r\n      {experienceList.map((experience, index) => (\r\n        <VerticalTimelineElement\r\n          key={index}\r\n          className=\"vertical-timeline-element--work\"\r\n          contentStyle={{\r\n            background: plum,\r\n            color: beige,\r\n          }}\r\n          contentArrowStyle={{ borderRight: `7px solid  ${plum}` }}\r\n          date={experience.date}\r\n          iconStyle={{\r\n            background: \"rgb(33, 150, 243)\",\r\n            color: beige,\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n          icon={<Icon iconLink={experience.icon} />}\r\n        >\r\n          <h3 className=\"vertical-timeline-element-title\">\r\n            {experience.title}\r\n          </h3>\r\n          <h4 className=\"vertical-timeline-element-subtitle\">\r\n            {experience.company}\r\n          </h4>\r\n          <h4 className=\"vertical-timeline-element-subtitle\">\r\n            {experience.location}\r\n          </h4>\r\n          <p>{experience.summary}</p>\r\n        </VerticalTimelineElement>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nconst Experience = () => {\r\n  const { language } = useContext(SessionContext);\r\n  return (\r\n    <Section headerText={language.experience} contentHeight={130} darkMode>\r\n      <VerticalTimeline>\r\n        <VerticalTimelineElements experienceList={language.experienceList} />\r\n      </VerticalTimeline>\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport { Experience };\r\n","// Factory function for creating functions for window.open\r\nexport const windowOpen = (link, isTargetBlank = false) => () => {\r\n  window.open(link, isTargetBlank ? \"_blank\" : \"\");\r\n};\r\n","// Factory function for creating functions for window.scrollTo\r\nexport const scrollToTop = (top = 0, behavior = \"smooth\") => () =>\r\n  window.scrollTo({ top, behavior });\r\n","import React, { useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { SessionContext, ThemeContext } from \"../../providers\";\r\nimport { windowOpen, scrollToTop } from \"../../../helpers\";\r\nimport { Section } from \"../../common\";\r\n\r\nconst useStyles = (color) =>\r\n  makeStyles((theme) => ({\r\n    button: {\r\n      margin: theme.spacing(1),\r\n      fontFamily: \"inherit\",\r\n      \"&:hover\": {\r\n        backgroundColor: color,\r\n        color: \"white\",\r\n      },\r\n    },\r\n    input: {\r\n      display: \"none\",\r\n    },\r\n  }))();\r\n\r\nconst CenterContents = styled.div`\r\n  text-align: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst StyledDivRow = styled.div`\r\n  align-content: row;\r\n`;\r\n\r\nconst ContactMe = () => {\r\n  const { language } = useContext(SessionContext);\r\n  const {\r\n    colors: { plum },\r\n  } = useContext(ThemeContext);\r\n  const classes = useStyles(plum);\r\n\r\n  return (\r\n    <Section headerText={language.contact} contentHeight={50}>\r\n      <CenterContents>\r\n        <div>\r\n          <p>\r\n            {language.inquiries}\r\n            <a href=\"&#109;&#97;&#105;&#108;&#116;&#111;&#58;&#109;&#97;&#114;&#99;&#111;&#46;&#97;&#117;&#117;&#64;&#108;&#105;&#118;&#101;&#46;&#99;&#111;&#109;\">\r\n              &#104;&#101;&#114;&#101;\r\n            </a>\r\n            .\r\n          </p>\r\n          {language.contactMe.map((desc, index) => (\r\n            <p key={index}>{desc}</p>\r\n          ))}\r\n        </div>\r\n        <StyledDivRow>\r\n          <Button\r\n            id=\"viewOnGithubButton\"\r\n            variant=\"outlined\"\r\n            className={classes.button}\r\n            onClick={windowOpen(language.githubUrl, true)}\r\n          >\r\n            {language.viewOnGithub}\r\n          </Button>\r\n          <Button\r\n            id=\"viewLinkedinButton\"\r\n            variant=\"outlined\"\r\n            className={classes.button}\r\n            onClick={windowOpen(language.linkedinUrl, true)}\r\n          >\r\n            {language.viewLinkedin}\r\n          </Button>\r\n        </StyledDivRow>\r\n        <StyledDivRow>\r\n          <Button\r\n            id=\"scrollToTopButton\"\r\n            className={classes.button}\r\n            onClick={scrollToTop()}\r\n          >\r\n            {language.scrollToTop}\r\n          </Button>\r\n        </StyledDivRow>\r\n      </CenterContents>\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport { ContactMe };\r\n","import React from \"react\";\r\n\r\nimport { ParallaxProvider } from \"../../providers\";\r\nimport { Body } from \"../Body\";\r\nimport { Intro } from \"../Intro\";\r\nimport { AboutMeDescription } from \"../AboutMeDescription\";\r\nimport { Banner } from \"../Banner\";\r\nimport { SkillsEducation } from \"../SkillsEducation\";\r\nimport { Experience } from \"../Experience\";\r\nimport { ContactMe } from \"../ContactMe\";\r\nimport images from \"../../../resources/images/images.json\";\r\n\r\nconst Main = () => (\r\n  <ParallaxProvider>\r\n    <Body>\r\n      <Intro />\r\n      <AboutMeDescription />\r\n      <Banner imageSrc={images.vancouver} height={50} />\r\n      <SkillsEducation />\r\n      <Experience />\r\n      <ContactMe />\r\n    </Body>\r\n  </ParallaxProvider>\r\n);\r\n\r\nexport { Main };\r\n","import React, { useContext } from \"react\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\n\r\nimport { Main } from \"../Main\";\r\nimport { SessionContext } from \"../../providers\";\r\n\r\nconst Router = () => {\r\n  const { basename } = useContext(SessionContext);\r\n  return (\r\n    <BrowserRouter basename={basename}>\r\n      <Route exact path={\"/\"} component={Main} />\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport { Router };\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { SessionProvider, ThemeProvider } from \"./providers\";\nimport { Router } from \"./views\";\nimport language from \"../resources/language/en.json\";\nimport theme from \"../resources/theme/theme.json\";\n\nconst App = ({ basename }) => (\n  <SessionProvider basename={basename} language={language}>\n    <ThemeProvider theme={theme}>\n      <Router />\n    </ThemeProvider>\n  </SessionProvider>\n);\n\nApp.propTypes = {\n  basename: PropTypes.string.isRequired,\n};\n\nexport { App };\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./resources/styles/index.css\";\nimport { App } from \"./components\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App basename={process.env.PUBLIC_URL} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}